{"version":3,"sources":["helpers/index.js","components/MapPage.js","components/MultiChannelAudioPlayer.js","components/PlacePage.js","components/Menu.js","components/BaseContainer.js","App.js","serviceWorker.js","index.js"],"names":["getConfig","data","key","i","docs","length","type","value","Number","parseFloat","t","translations","locale","content","DEFAULT_CIRCLE_OPTIONS","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeWeight","Map","withGoogleMap","props","position","userPosition","defaultZoom","mapExtraProps","center","options","streetViewControl","fullscreenControl","mapTypeControl","markers","places","map","p","index","react_default","a","createElement","Marker_default","lat","lng","lon","onClick","openPlace","circle","Circle_default","radius","GoogleMap_default","Object","assign","defaultCenter","PlaceEntry","PlaceLi","place","name_en","MapPage","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","axios","get","apiUrl","response","setState","defaultPosition","_this2","MapPage_PlaceEntry","console","log","MapContainer","visible","containerElement","style","height","mapElement","LocateButton","src","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","alert","enableHighAccuracy","timeout","maximumAge","Component","styled","div","_templateObject","li","_templateObject2","img","_templateObject3","AudioContext","window","webkitAudioContext","audioContextCreatedAt","Date","now","AudioLoader","req","XMLHttpRequest","open","path","responseType","onload","status","onComplete","onprogress","oEvent","lengthComputable","percentComplete","loaded","total","onProgress","send","React","MultiChannelAudioPlayer","_React$Component2","tracks","doSkip","offset","backToPlay","controlStatus","updatePlaybackControlStatus","newPosition","playbackPosition","channelsOn","activeTracks","playbackControlStatus","loadingStatus","avgLoaded","playbackStartedAt","handlePlay","bind","assertThisInitialized","handlePause","handleRewind","updatePlaybackPosition","audioContext","audioBuffers","samples","gainNodes","createGain","panners","track","StereoPannerNode","pan","decoded","calculateLoadingStatus","loaders","MultiChannelAudioPlayer_AudioLoader","file","_unmounted","_ref","asyncToGenerator","regenerator_default","mark","_callee","arrayBuffer","wrap","_context","prev","next","test","userAgent","decodeAudioData","audioBuffer","then","stop","_x","apply","arguments","inherits","createClass","forEach","l","avg","toFixed","allDecoded","d","updateLoadingStatus","controls","gain","start","_this3","undefined","sampleSource","createBufferSource","buffer","connect","destination","onended","_this4","resume","startTime","currentTime","updateSequenceStartedAt","playSample","playbackPositionInterval","setInterval","sample","clearInterval","total_seconds","s","min","Math","floor","sec","_this5","controlable","formatTime","PlacePage","toggleTrack","_id","params","$embed","JSON","stringify","audio1","url","audio2","audio3","trackButtons","PlacePageContainer","name","description","MultiChannelAudioPlayer_MultiChannelAudioPlayer","ExitButton","exitPlace","PlacePage_templateObject","PlacePage_templateObject2","LocaleToggle","localeOptions","LocaleOption","active","setLocale","Menu","toggleSection","menuSections","match","exec","push","titleKey","contentKey","menuItems","MenuSection","MenuSectionTitle","MenuIcon","MenuContent","MenuContainer","Menu_ExitButton","close","Menu_LocaleToggle","Menu_templateObject","h3","Menu_templateObject2","Menu_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","BaseContainer","currentPlace","menuOpen","MenuButton","components_Menu","components_MapPage","components_PlacePage","BaseContainer_templateObject","App","components_BaseContainer","Boolean","location","hostname","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ee3415d1.chunk.js","sourcesContent":["export const apiUrl = \"/api\"\n\nexport function getConfig(data, key) {\n  for(let i = 0; i < data.docs.length; i++) {\n    if(data.docs[i].key == key) {\n      return data.docs[i].type == \"text\" ? data.docs[i].value : Number.parseFloat(data.docs[i].value);\n    }\n  }\n  return null;\n}\n\nexport function t(translations, key, locale) {\n  for(let i = 0; i < translations.length; i++) {\n    if(translations[i].key == key) {\n      let content = translations[i][\"content_\" + locale];\n      return content ? content : \"[\"+ key + \"]\";\n    }\n  }\n  return \"[\"+ key + \"]\";\n}","import React, { Component } from 'react';\nimport withGoogleMap from 'react-google-maps/lib/withGoogleMap';\nimport GoogleMap from 'react-google-maps/lib/components/GoogleMap';\nimport Marker from 'react-google-maps/lib/components/Marker';\nimport Circle from 'react-google-maps/lib/components/Circle';\n\nimport styled from 'styled-components'\n\nimport axios from 'axios';\nimport { apiUrl, getConfig } from '../helpers';\n\n/* Create map with withGoogleMap HOC */\n/* https://github.com/tomchentw/react-google-maps */\n\n/* Default configuration */\nconst DEFAULT_RADIUS = 250;\n/* Circle options */\n// https://developers.google.com/maps/documentation/javascript/3.exp/reference#CircleOptions\nconst DEFAULT_CIRCLE_OPTIONS = {\n  fillColor: 'gray',\n  fillOpacity: 0.25,\n  strokeColor: 'gray',\n  strokeOpacity: 1,\n  strokeWeight: 1.5\n};\n\nconst Map = withGoogleMap((props) => {\n  const {\n    position,\n    userPosition,\n    defaultZoom,\n    places\n  } = props;\n  const mapExtraProps = { \n    center: position,\n    options: {streetViewControl: false, fullscreenControl: false, mapTypeControl: false}\n  };\n\n  const markers = places.map((p, index)=>\n    (p.locale == props.locale ? <Marker\n      key={index}\n      position={{lat: p.lat, lng: p.lon}}\n      onClick={()=>{props.openPlace(p)}}\n    /> : null)\n  )\n\n  const circle = \n    <Circle\n      center={userPosition}\n      radius={DEFAULT_RADIUS}\n      options={DEFAULT_CIRCLE_OPTIONS}\n    />;\n  \n  return (\n    <GoogleMap\n      defaultZoom={defaultZoom}\n      defaultCenter={position}\n      {...mapExtraProps}\n    >\n      {markers}\n      {props.userPosition && circle}\n    </GoogleMap>\n  )\n});\n\n\nconst PlaceEntry = props => \n  <PlaceLi onClick={props.onClick}>\n    {props.place.name_en}\n  </PlaceLi>\n\nclass MapPage extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userPosition: null,\n    }\n  }\n\n  async componentDidMount() {\n    let response = await axios.get(apiUrl + \"/config\");\n    this.setState({\n      defaultPosition: {\n        lat: getConfig(response.data, \"base_lat\"),\n        lng: getConfig(response.data, \"base_lon\")\n      },\n      defaultZoom: getConfig(response.data, \"base_zoom\")\n    });\n  }\n\n  render () {\n    const placeEntries = this.props.places ? this.props.places.map((p, index)=>\n      <PlaceEntry\n        key={index}\n        place={p}\n        onClick={()=>this.props.openPlace(p)}\n      />\n    ) : \"loading...\"\n\n    console.log(this.props.places);\n\n    return <MapContainer visible={this.props.visible}>\n      \n      {this.state.defaultPosition && <Map\n        containerElement={ <div style={ {height: '100%'} } /> }\n        mapElement={ <div style={ {height: '100vh'} } /> }\n        position={this.state.userPosition ? this.state.userPosition : this.state.defaultPosition}\n        userPosition={this.state.userPosition}\n        defaultZoom={this.state.defaultZoom}\n        places={this.props.places}\n        openPlace={this.props.openPlace}\n        locale={this.props.locale}\n      />}\n\n      {/*<ul>{placeEntries}</ul>*/}\n\n      <LocateButton src=\"/images/locate.png\" \n        onClick={()=>{\n          \n          // Try HTML5 geolocation\n          if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition((position)=> {\n              var pos = {\n                lat: position.coords.latitude,\n                lng: position.coords.longitude\n              };\n\n              console.log(\"setting userPosition\");\n              this.setState({userPosition: pos})\n            }, ()=> {\n              alert(\"couldn't get location\");\n            }, {\n              enableHighAccuracy: true,\n              timeout: 5000,\n              maximumAge: 0\n            });\n          } else {\n            alert(\"browser doesn't support location\");\n          }\n\n        }}\n      />\n\n    </MapContainer>\n  }\n}\n\nexport default MapPage;\n\nconst MapContainer = styled.div`\n  display: flex;\n  width: 100%; \n  box-sizing: border-box;\n  flex-direction: column;\n  position: fixed;\n  visibility: ${props => props.visible ? \"visible\" : \"hidden\"}\n`\n\nconst PlaceLi = styled.li`\n  :hover {cursor: pointer};\n`\n\nconst LocateButton = styled.img`\n  position: absolute;\n  width: 30px;\n  height: 30px;\n  right: 10px;\n  bottom: 120px;\n  padding: 5px;\n  box-shadow: 2px 2px #ddd;\n  border-radius: 2px;\n  background-color: white;\n  font-weight: bold;\n  :hover {cursor: pointer};\n`\n","import React from 'react';\nimport ReactAudioPlayer from 'react-audio-player';\n\n\nconst AudioContext = window.AudioContext || window.webkitAudioContext;\nlet audioContextCreatedAt = Date.now()\n\nclass AudioLoader extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.req = new XMLHttpRequest();\n    this.req.open('GET', this.props.path, true);\n    this.req.responseType = 'arraybuffer';\n\n    this.req.onload = ()=> {\n       // Onload is triggered even on 404\n       // so we need to check the status code\n       if (this.req.status === 200) {\n          console.log(\"complete\");\n          this.props.onComplete(this.req.response);\n       }\n    }\n\n    this.req.onprogress = (oEvent)=> {\n      if (oEvent.lengthComputable) {\n        var percentComplete = oEvent.loaded / oEvent.total * 100;\n        this.props.onProgress(percentComplete);\n      } else {\n        // Unable to compute progress information since the total size is unknown\n      }\n    }\n    this.req.send();\n  }\n\n  componentWillUnmount() {\n    this.req.onload = null;\n    this.req.onprogress = null;\n  }\n\n\n  render() {\n    return null;\n  }\n}\n\nexport class MultiChannelAudioPlayer extends React.Component {\n\n  constructor(props) {\n\n    console.log(\"tracks\", props.tracks);\n\n    audioContextCreatedAt = Date.now()\n    super(props);\n    this.state = {\n      channelsOn: props.activeTracks ? props.activeTracks : props.tracks.map(()=>true),\n      controlStatus: props.playbackControlStatus ? props.playbackControlStatus : \"loading\",\n      loadingStatus: \"\",\n      avgLoaded: 0,\n      playbackPosition: 0,\n      playbackStartedAt: 0,\n    }\n    this.handlePlay = this.handlePlay.bind(this);\n    this.handlePause = this.handlePause.bind(this);\n    this.handleRewind = this.handleRewind.bind(this);\n    this.updatePlaybackPosition = this.updatePlaybackPosition.bind(this);\n    \n    this.audioContext = new AudioContext();  \n    \n    this.audioBuffers = props.tracks.map(()=>null);      \n    this.samples = props.tracks.map(()=>null);      \n    this.gainNodes = props.tracks.map(()=>\n      {return this.audioContext.createGain();}\n    );          \n\n    this.panners = props.tracks.map((track, index)=>{\n      //const pannerOptions = { pan: -1 + (2 / this.props.tracks.length) * index };\n      const pannerOptions = { pan: 0 };\n      if (typeof StereoPannerNode !== 'undefined') {\n        return new StereoPannerNode(this.audioContext, pannerOptions);\n      }\n      return null;\n    });\n\n    this.loaded = props.tracks.map(()=>0);      \n    this.decoded = props.tracks.map(()=>false);      \n    this.calculateLoadingStatus = this.calculateLoadingStatus.bind(this);\n\n    this.loaders = this.props.tracks.map((track, index)=>\n      <AudioLoader\n          key={index}\n          path={track.file}\n          onProgress={(loaded)=>{\n            if(this._unmounted) return;\n            this.loaded[index] = loaded;\n            this.calculateLoadingStatus();\n          }}\n          onComplete={async (arrayBuffer)=>{\n\n            const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n\n            if(isSafari) {\n              this.audioContext.decodeAudioData(arrayBuffer, (audioBuffer)=>{\n                if(this._unmounted) return;\n                console.log(\"decoded safari\");\n                this.audioBuffers[index] = audioBuffer;            \n                this.loaded[index] = 100;\n                this.decoded[index] = true;\n                this.calculateLoadingStatus();\n              });  \n            } else {\n              this.audioContext.decodeAudioData(arrayBuffer).then((audioBuffer)=>{\n                if(this._unmounted) return;\n                console.log(\"decoded\");\n                this.audioBuffers[index] = audioBuffer;            \n                this.loaded[index] = 100;\n                this.decoded[index] = true;\n                this.calculateLoadingStatus();\n              });\n            }\n            \n            \n          }}\n      />\n    );\n\n    console.log(\"loaders\", this.loaders);\n  }\n\n  componentDidMount() {\n    this._unmounted = false;\n  }\n\n  componentWillUnmount() {\n    this.handlePause()\n    this._unmounted = true;\n  } \n\n  calculateLoadingStatus() {\n    let total = 0;\n    this.loaded.forEach((l)=>total+=Number(l));\n    let avg = (total / this.loaded.length).toFixed(1);\n    this.setState({avgLoaded: avg});\n\n    let allDecoded = true;\n    this.decoded.forEach(d=>{\n      if(!d) allDecoded = false;\n    });\n\n    if(avg < 100) {\n      this.updateLoadingStatus(\"loading... \" + avg + \"%\");     \n    } else {\n      this.updateLoadingStatus(\"preparing...\");     \n    }\n    \n    if(avg == 100 && allDecoded) {\n      this.updatePlaybackControlStatus(\"ready\");  \n      this.updateLoadingStatus(\"\");     \n    }\n  }\n\n  updateLoadingStatus(status) {\n    this.setState({loadingStatus: status});\n    if(this.props.updateLoadingStatus) {\n      this.props.updateLoadingStatus(status);\n    }\n  }\n\n  updatePlaybackControlStatus(status) {\n    if(this.props.updatePlaybackControlStatus) {\n      this.props.updatePlaybackControlStatus(status);\n    }\n\n    if(this.state.controlStatus !== status) {\n      this.setState({controlStatus: status});\n      if(status === \"playing\") {\n          this.handlePlay();\n      }\n      if(status === \"ready\") {\n        this.handleRewind();\n      }\n      if(status === \"paused\") {\n        this.handlePause();\n      }\n    }\n  }\n  \n  componentDidUpdate() {\n    if(!this.props.controls) {\n      if(this.state.controlStatus !== this.props.playbackControlStatus) {\n        this.setState({controlStatus: this.props.playbackControlStatus})\n        if(this.props.playbackControlStatus === \"playing\") {\n          this.handlePlay();\n        }\n        if(this.props.playbackControlStatus === \"ready\") {\n          this.handleRewind();\n        }\n        if(this.props.playbackControlStatus === \"paused\") {\n          this.handlePause();\n        }\n      }\n    }\n\n    if(this.props.activeTracks) {\n      for(let i = 0; i < this.props.activeTracks.length; i++) {\n        if(this.gainNodes[i]) {\n          this.gainNodes[i].gain.value = this.props.activeTracks[i] ? 1.0 : 0.0;\n        }\n      }\n    }\n  }\n\n  playSample(index, start, offset=0) {\n    \n    const sampleSource = this.audioContext.createBufferSource();\n    \n    // console.log(this.audioBuffers[index]);\n\n    sampleSource.buffer = this.audioBuffers[index];\n\n    if(this.panners[index]) {\n      sampleSource.connect(this.gainNodes[index]).connect(this.panners[index]).connect(this.audioContext.destination)  \n    } else {\n      sampleSource.connect(this.gainNodes[index]).connect(this.audioContext.destination)  \n    }\n\n    sampleSource.start(start, offset);\n\n    // console.log(sampleSource);\n\n    if(index == 0) {\n      sampleSource.onended = () => {\n        console.log(\"ended\");\n        // if stopping because the files ends\n        if (this.props.playbackControlStatus === \"playing\") {\n          this.props.updatePlaybackControlStatus(\"ready\");\n        }\n      }\n    }\n    \n    this.samples[index] = sampleSource; // save for later stopping and manipulation\n\n  }\n\n  handlePlay() {\n    if(this.audioContext.state === 'suspended') {\n        this.audioContext.resume();\n    }\n    let startTime = this.audioContext.currentTime;\n    this.setState({\n      playbackPosition: this.state.playbackPosition,\n      playbackStartedAt: startTime - this.state.playbackPosition\n    });\n    console.log(\"starting to play at \" + startTime);\n    // console.log(\"playbackPosition \" + this.state.playbackPosition);\n    if(this.props.updateSequenceStartedAt)\n      this.props.updateSequenceStartedAt(audioContextCreatedAt + (startTime - this.state.playbackPosition)*1000);\n    \n    this.audioBuffers.forEach((buffer, index)=>{\n      this.playSample(index, startTime, this.state.playbackPosition); \n    })\n\n    this.playbackPositionInterval = setInterval(this.updatePlaybackPosition, 1000);\n  }\n\n  handlePause() {\n    this.samples.forEach((sample)=>{\n      if(sample) {\n        sample.stop();   \n      }\n    })\n    this.updatePlaybackPosition();\n    clearInterval(this.playbackPositionInterval);\n  }\n\n  updatePlaybackPosition() {\n    if(this.audioContext) {\n      this.setState({playbackPosition: this.audioContext.currentTime - this.state.playbackStartedAt});   \n    }\n  }\n\n  handleRewind() {\n    this.samples.forEach((sample)=>{\n      if(sample) {\n        sample.stop();   \n      }\n    })\n    this.setState({playbackPosition: 0});\n    clearInterval(this.playbackPositionInterval);\n  }\n\n  doSkip = (offset) => {\n    let backToPlay = false;\n    if(this.state.controlStatus == \"playing\") {\n      this.updatePlaybackControlStatus(\"paused\");\n      backToPlay = true;\n    }\n    let newPosition = this.state.playbackPosition + offset;\n    if(newPosition < 0) newPosition = 0\n    this.setState({playbackPosition: newPosition}, ()=>{\n      if(backToPlay) {\n        console.log(\"resuming play\");\n        this.updatePlaybackControlStatus(\"playing\");\n      }\n    });\n  }\n\n  formatTime(total_seconds) {\n    let s = total_seconds.toFixed(0);\n    let min = Math.floor(s / 60);\n    let sec = s - min * 60;\n    if(sec < 10) sec = \"0\" + sec;\n    return min + \":\" + sec;\n  }\n\n  render() {\n\n    const controlable = this.state.controlStatus != \"loading\";\n    \n    return (\n      <div>\n        {this.loaders}\n        \n        {this.props.controls && controlable && this.state.controlStatus != \"playing\" && \n          <button onClick={()=>this.updatePlaybackControlStatus(\"playing\")}>Play</button>\n        }\n        {this.props.controls && controlable && this.state.controlStatus != \"paused\" && this.state.controlStatus != \"ready\" &&\n          <button onClick={()=>this.updatePlaybackControlStatus(\"paused\")}>Pause</button>\n        }\n        {this.props.controls && controlable && this.state.controlStatus != \"ready\" &&\n          <button onClick={()=>this.updatePlaybackControlStatus(\"ready\")}>Rewind</button>\n        }\n\n        {this.props.controls && controlable && \n          <div>\n            <span>{this.formatTime(this.state.playbackPosition)}</span>\n            <button onClick={()=>this.doSkip(+5)}>+5</button>\n            <button onClick={()=>this.doSkip(-5)}>-5</button>\n          </div>\n        }\n\n        {this.props.controls && <p>{this.state.loadingStatus}</p>}\n      </div>\n    );\n  }\n\n}","import React, { Component } from 'react';\nimport styled from 'styled-components'\n\nimport { MultiChannelAudioPlayer } from './MultiChannelAudioPlayer';\n\nimport axios from 'axios';\n\nimport { apiUrl } from '../helpers';\n\nclass PlacePage extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      playbackControlStatus: \"loading\", // ready - playing - paused\n      activeTracks: [true, false, false],\n      tracks: null\n    }\n \n    this.updatePlaybackControlStatus = this.updatePlaybackControlStatus.bind(this);\n    this.toggleTrack = this.toggleTrack.bind(this);\n  }\n\n  async componentDidMount() {\n    let response = await axios.get(apiUrl + \"/place/\"+this.props.place._id, {\n        params: {\n          $embed: JSON.stringify([\"audio1\", \"audio2\", \"audio3\"])\n        }\n      }  \n    );\n    console.log(response);\n    let tracks = [\n      {file: response.data.audio1.url}, \n      {file: response.data.audio2.url}, \n      {file: response.data.audio3.url}\n    ];\n    console.log(tracks);\n    this.setState({\n      place: response.data,\n      tracks: tracks\n    });\n  }\n\n  updatePlaybackControlStatus(playbackControlStatus) {\n    this.setState({playbackControlStatus})\n  }\n\n  toggleTrack(index) {\n    let activeTracks = [false, false, false];\n    activeTracks[index] = true;\n    this.setState({activeTracks});\n  }\n\n  render () {\n    const trackButtons = this.state.activeTracks.map((value, index)=>{\n      return <button onClick={()=>{this.toggleTrack(index)}}>\n        Channel {index + 1}: {value ? \"on\" : \"off\"}\n      </button>\n    });\n\n    return <div>\n      <PlacePageContainer>\n\n        <h2>{this.state.place ? this.state.place.name : \"loading...\"}</h2>\n\n        <p>{this.state.place ? this.state.place.description : \"loading...\"}</p>\n\n        {this.state.tracks && <MultiChannelAudioPlayer \n          playbackControlStatus={this.state.playbackControlStatus}\n          updatePlaybackControlStatus={this.updatePlaybackControlStatus}\n          tracks={this.state.tracks}\n          activeTracks={this.state.activeTracks}\n          controls\n        />}\n\n        {this.state.playbackControlStatus != \"loading\" && trackButtons}\n\n      </PlacePageContainer>\n      <ExitButton onClick={this.props.exitPlace}>❎</ExitButton>\n\n    </div>\n  }\n}\n\nexport default PlacePage;\n\nconst ExitButton = styled.div`\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  :hover {cursor: pointer};\n`\n\nconst PlacePageContainer = styled.div`\n  position: absolute;\n  box-sizing: border-box;\n  width: 100%;\n  padding: 20px;\n`","import React, { Component } from 'react';\nimport styled from 'styled-components'\n\nimport { t } from '../helpers'\n\nclass LocaleToggle extends Component {\n  render () {\n    const localeOptions = [\"en\", \"no\"].map((l)=>\n      <LocaleOption active={l == this.props.locale} onClick={()=>this.props.setLocale(l)}>{l}</LocaleOption>\n    )\n    return (\n      <div>\n        <p>{t(this.props.translations, \"language_prompt\", this.props.locale)}</p>\n        <ul>\n          {localeOptions}        \n        </ul>\n      </div>\n    )\n  }\n}\n\nclass Menu extends Component {\n\n  constructor(props) {\n    super(props);\n\n    let menuSections = [];\n    this.props.translations.forEach((t)=>{\n      let myRegexp = /(menu_)(\\d+)(_title)/g;\n      let match = myRegexp.exec(t.key);\n      if(match) {\n        if(match.length == 4) {\n          menuSections.push({\n            open: false,\n            titleKey: t.key,\n            contentKey: \"menu_\" + match[2] + \"_content\",\n          });  \n        }  \n      }\n    });\n    this.state = { menuSections }\n  }\n\n  toggleSection = (index)=>{\n    let menuSections = this.state.menuSections;\n    menuSections[index].open = !menuSections[index].open;\n    this.setState({ menuSections });\n  }\n  \n  render () {\n\n    const menuItems = this.state.menuSections.map((s, index)=>\n      <MenuSection>\n        <MenuSectionTitle \n          onClick={()=>{this.toggleSection(index)}}\n        >\n          <MenuIcon src={s.open ? \"/images/Menu_close.png\" : \"/images/Menu_open.png\"}/>\n          {t(this.props.translations, s.titleKey, this.props.locale)}\n        </MenuSectionTitle>\n        {s.open && \n          <MenuContent>{t(this.props.translations, s.contentKey, this.props.locale)}</MenuContent>\n        }\n      </MenuSection>\n    )\n\n    return (\n      <MenuContainer>\n        <ExitButton onClick={this.props.close}>❎</ExitButton>\n        <LocaleToggle \n          locale={this.props.locale} \n          setLocale={this.props.setLocale}\n          translations={this.props.translations}\n        />\n        <h1>{t(this.props.translations, \"main_title\", this.props.locale)}</h1>\n        {menuItems}\n\n      </MenuContainer>\n    )\n  }\n}\n\nexport default Menu;\n\nconst LocaleOption = styled.li`\n  text-decoration: ${props=>props.active ? \"none\" : \"underline\"};\n  :hover {cursor: ${props=>props.active ? \"default\" : \"pointer\"}};\n`\n\nconst MenuSectionTitle = styled.h3`\n :hover {cursor: pointer}; \n user-select: none;\n`\n\nconst MenuSection = styled.div`\n  \n`\n\nconst MenuIcon = styled.img`\n  width: 20px;\n  height: 20px;\n  padding-right: 5px;\n`\n\nconst MenuContent = styled.p`\n  padding-left: 20px;\n  margin-bottom: 40px;\n`\n\nconst ExitButton = styled.div`\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  :hover {cursor: pointer};\n`\n\nconst MenuContainer = styled.div`\n  position: absolute;\n  z-index: 50;\n  box-sizing: border-box;\n  width: 100%;\n  min-height: 100vh;\n  padding: 20px;\n  background-color: white;\n`","import React, { Component } from 'react';\n\nimport MapPage from './MapPage.js'\nimport PlacePage from './PlacePage.js'\nimport Menu from './Menu.js'\n\nimport axios from 'axios';\nimport { apiUrl } from '../helpers'\n\nimport styled from 'styled-components'\n\nclass BaseContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      places: [],\n      currentPlace: null,\n      menuOpen: false,\n      translations: [],\n      locale: \"en\",\n    }\n  }\n\n  async componentDidMount() {\n    let response = await axios.get(apiUrl + \"/place\");\n    this.setState({places: response.data.docs});\n\n    response = await axios.get(apiUrl + \"/translation\");\n    this.setState({translations: response.data.docs});\n  }\n\n  setLocale = (l)=> {\n    this.setState({locale: l})\n  }\n\n  render() {\n    return (\n      <div>\n        {!this.state.menuOpen && !this.state.currentPlace &&\n          <MenuButton src=\"/images/menu.png\" onClick={()=>{\n            this.setState({menuOpen: true});\n          }}\n          />\n        }\n\n        {this.state.menuOpen && \n          <Menu \n            close={()=>{ this.setState({menuOpen: false}); }}\n            translations={this.state.translations}\n            locale={this.state.locale}\n            setLocale={this.setLocale}\n          />\n        }\n\n        <MapPage\n          visible={!this.state.currentPlace} \n          places={this.state.places}\n          openPlace={(p)=>{this.setState({currentPlace: p})}}\n          locale={this.state.locale}\n        />\n        {this.state.currentPlace && \n          <PlacePage \n            place={this.state.currentPlace}\n            exitPlace={()=>{this.setState({currentPlace: null})}}\n            locale={this.state.locale}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default BaseContainer;\n\nconst MenuButton = styled.img`\n  position: absolute;\n  z-index: 100;\n  width: 30px;\n  height: 30px;\n  left: 10px;\n  top: 10px;\n  :hover {cursor: pointer}; \n`\n","import React from 'react';\nimport BaseContainer from './components/BaseContainer.js'\n\nconst App = () => <BaseContainer/>\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}